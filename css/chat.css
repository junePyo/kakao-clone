.chats-body {
  /* no padding for the body section in chat screen */
  padding: 0;
}

.chat-screen {
  background-image: url("../images/blue-snow.png");
  min-height: 100vh; /*gives the chat div a height of 100% of the height of the viewport */
}

.chat__write-container {
  position: fixed;
  bottom: 0px;
  /* centering a fixed container */
  margin: 0 auto;
  left: 0;
  right: 0;

  display: flex;
  justify-content: space-between;
  align-items: center;
}

.chat__icon-left {
  position: absolute;
  left: 10px;
}

.chat__icon-right {
  position: absolute;
  right: 10px;
}

@keyframes float {
  0% {
    transform: translateY(-60px);
    box-shadow: 0 30px 60px -12px rgba(50, 50, 93, 0.25),
      0 18px 36px -18px rgba(0, 0, 0, 0.3),
      0 -12px 36px -8px rgba(0, 0, 0, 0.025);
  }
  50% {
    transform: translateY(-70px);
    box-shadow: 0 30px 60px -60px rgba(50, 50, 93, 0.25),
      0 18px 36px -10px rgba(0, 0, 0, 0.3),
      0 -12px 36px -8px rgba(0, 0, 0, 0.025);
  }
  100% {
    transform: translateY(-60px);
    box-shadow: 0 30px 60px -12px rgba(50, 50, 93, 0.25),
      0 18px 36px -18px rgba(0, 0, 0, 0.3),
      0 -12px 36px -8px rgba(0, 0, 0, 0.025);
  }
}

.chat__write {
  margin: 0 auto;
  bottom: 0px;
  width: 100%;
  border-radius: 0;
  padding: 10px 30px;
  border: none;
  font-size: 14px;
  background-color: white;
  transition: width 0.5s ease-in-out, border-radius 0.5s ease-in-out,
    transform 0.5s ease-in-out;
}

.chat__write:focus {
  outline: none;
  width: 80%;
  transform: translateY(-60px);
  border-radius: 40px;
  box-shadow: 0 30px 60px -30px rgba(50, 50, 935, 0.25),
    0 18px 36px -11px rgba(0, 0, 0, 0.3), 0 -12px 36px -8px rgba(0, 0, 0, 0.025);
  animation: float 3s linear infinite forwards;
}

.chat__write:focus ~ .chat__icon {
  opacity: 0;
}

.chat__icon {
  font-size: 18px;
  transition: opacity 0.4s ease-in-out;
}

.chat__write i {
  font-size: 22px;
}

.chat__write-column:nth-child(2) {
  /* increase the size of the div box that contains the input box */
  width: 80%;
}

.chat__write-column input {
  padding: 10px 10px;
  border: none;
  font-size: 14px;
  /* scale the size of the input box to 100% size of the parent div container */
  width: 100%;
}

.chat-screen .chat__messages {
  border-top: 1px solid #f7f7f7;
  display: flex;
  flex-direction: column;
  align-items: center;
  padding: 0px 20px;
  padding-top: 30px;

  /* for some reason, incoming message list item is not aligned to center as it should,
  according to the command above on its parent class, chat__messages */
}

.chat__messages .chat__timestamp {
  background-color: white;
  font-size: 12px;
  padding: 5px 10px;
  border-radius: 10px;
  margin-bottom: 30px;
  box-shadow: rgba(0, 0, 0, 0.3) 0px 8px 16px -8px,
    rgba(0, 0, 0, 0.024) 0px -6px 16px -6px;
  text-transform: uppercase;
  font-weight: 700;
}

.message {
  display: flex;
  align-items: flex-start;
  margin-bottom: 20px;
}

.message .content-incoming {
  display: flex;
  flex-direction: column;
}

.content-incoming .message__author {
  padding-left: 3px;
}

.incoming-message {
  align-self: flex-start;
}

.sent-message {
  align-self: flex-end;
}

.incoming-message img {
  width: 40px;
  height: 40px;
  border-radius: 15px;
  margin-right: 15px;
}

.incoming-message .message__author {
  margin-bottom: 5px;
  display: block;
  font-weight: 600;
  font-size: 12px;
}

.message .message__bubble {
  display: block;
  background-color: white;
  box-shadow: 0 30px 60px -12px rgba(50, 50, 93, 0.25),
    0 18px 36px -18px rgba(0, 0, 0, 0.3), 0 -12px 36px -8px rgba(0, 0, 0, 0.025);
  padding: 10px 20px;
  border-radius: 30px;
  font-weight: 500;
}

.incoming-message .message__bubble {
  border-top-left-radius: 0px;
  background-color: white;
}

.sent-message .message__bubble {
  border-top-right-radius: 0px;
  background-color: rgb(243, 243, 51);
  /* if you want to use gradient color 
  background-image: linear-gradient(#00c6ff, #0072ff); */
}

@keyframes incomingAnimation {
  from {
    opacity: 0;
    transform: translateX(-70px);
  }
  to {
    opacity: 1;
    transform: none;
  }
}

.incoming-message {
  animation: incomingAnimation 0.7s ease-out forwards;
}

@keyframes sentAnimation {
  from {
    opacity: 0;
    transform: translateX(70px);
  }
  to {
    opacity: 1;
    transform: none;
  }
}

.sent-message {
  animation: sentAnimation 0.5s ease-out forwards;
  /* forwards means the element will retain the values at the end of the animation */
}
